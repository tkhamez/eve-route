buildscript {
    ext.gretty_version = '2.0.0'

    repositories {
        jcenter()
    }

    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath 'com.github.jengelman.gradle.plugins:shadow:2.0.4'
        classpath "org.akhikhl.gretty:gretty:$gretty_version"
    }
}

apply plugin: 'kotlin'
apply plugin: 'application'
apply plugin: 'war'
apply plugin: 'org.akhikhl.gretty'

group 'net.tkhamez.everoute'
version '0.8.2'
mainClassName = "io.ktor.server.netty.EngineMain"
webAppDirName = 'webapp'

// needs to be after "mainClassName = ..."
apply plugin: 'com.github.johnrengelman.shadow'

gretty {
    contextPath = '/'
    logbackConfigFile = 'resources/logback.xml'
}

sourceSets {
    main.kotlin.srcDirs = main.java.srcDirs = ['src']
    test.kotlin.srcDirs = test.java.srcDirs = ['test']
    main.resources.srcDirs = ['resources']
    test.resources.srcDirs = ['testresources']
}

repositories {
    mavenLocal()
    jcenter()
    maven { url 'https://kotlin.bintray.com/ktor' }
    maven { url 'https://kotlin.bintray.com/kotlinx' }
}

configurations {
    kotlinc
    //scripts
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    implementation "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"
    implementation "io.ktor:ktor-locations:$ktor_version"
    implementation "io.ktor:ktor-server-servlet:$ktor_version"
    implementation "io.ktor:ktor-server-netty:$ktor_version"
    implementation "ch.qos.logback:logback-classic:$logback_version"
    implementation "io.ktor:ktor-server-core:$ktor_version"
    implementation "io.ktor:ktor-server-host-common:$ktor_version"
    implementation "io.ktor:ktor-server-sessions:$ktor_version"
    implementation "io.ktor:ktor-auth:$ktor_version"
    implementation "io.ktor:ktor-client-core:$ktor_version"
    implementation "io.ktor:ktor-client-core-jvm:$ktor_version"
    implementation "io.ktor:ktor-client-apache:$ktor_version"
    implementation "io.ktor:ktor-client-json-jvm:$ktor_version"
    implementation "io.ktor:ktor-client-gson:$ktor_version"
    implementation "io.ktor:ktor-client-logging-jvm:$ktor_version"

    implementation "com.auth0:java-jwt:3.10.3"
    implementation "com.auth0:jwks-rsa:0.13.0"

    implementation "org.litote.kmongo:kmongo:$kmongo_version"
    //implementation "org.litote.kmongo:kmongo-async:$kmongo_version"
    //implementation "org.litote.kmongo:kmongo-coroutine:$kmongo_version"
    //implementation "org.litote.kmongo:kmongo-rxjava2:$kmongo_version"

    implementation "org.flywaydb:flyway-core:$flyway_version"

    implementation "org.jetbrains.exposed:exposed-core:$exposed_version"
    implementation "org.jetbrains.exposed:exposed-jdbc:$exposed_version"
    implementation "org.jetbrains.exposed:exposed-java-time:$exposed_version"
    implementation 'org.postgresql:postgresql:42.2.16'
    implementation "mysql:mysql-connector-java:8.0.21"
    implementation "org.mariadb.jdbc:mariadb-java-client:2.6.2"
    implementation "org.xerial:sqlite-jdbc:3.32.3.2"
    implementation "com.h2database:h2:1.4.200"

    testImplementation "io.ktor:ktor-server-tests:$ktor_version"

    implementation "org.jetbrains.kotlin:kotlin-script-runtime:$kotlin_version"
    //kotlinc "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    //kotlinc "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"
    kotlinc "org.jetbrains.kotlin:kotlin-compiler-embeddable:$kotlin_version"
    kotlinc "org.jetbrains.kotlin:kotlin-scripting-compiler-embeddable:$kotlin_version"
    kotlinc "io.ktor:ktor-client-gson:$ktor_version"
    //scripts "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
}

def kotlinHome = file("$buildDir/kotlin")

task prepareKotlinHome(type: Copy) {
    from(configurations.kotlinc)
    into("$kotlinHome/lib")
    rename {
        if (it.indexOf("kotlin-") != -1) {
            // strip the version suffix to satisfy the compiler
            (it - "-${kotlin_version}.jar") + ".jar"
        }
    }
}

// Task to build the resources/graph.json file
task buildGraph(type: JavaExec) {
    dependsOn prepareKotlinHome
    dependsOn classes
    main = "org.jetbrains.kotlin.cli.jvm.K2JVMCompiler"
    classpath = configurations.kotlinc
    args(
        "-kotlin-home", kotlinHome,
        //"-classpath", configurations.scripts.asPath,
        "-classpath", "$buildDir/kotlin/lib/gson-2.8.6.jar:$buildDir/classes/kotlin/main",
        "-script", "src/scripts/buildGraph.kts"
    )
}

// This task will generate your fat JAR and put it in the ./build/libs/ directory
shadowJar {
    manifest {
        attributes 'Main-Class': "io.ktor.server.netty.EngineMain"
    }
}

// Task for Heroku
task stage {
    dependsOn buildGraph
    dependsOn installDist
}

compileKotlin {
    kotlinOptions.jvmTarget = "11"
}

compileTestKotlin {
    kotlinOptions.jvmTarget = "11"
}
